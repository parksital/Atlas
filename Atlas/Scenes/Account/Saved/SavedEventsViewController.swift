//
//  SavedEventsViewController.swift
//  Atlas
//
//  Created by Parvin Sital on 27/07/2020.
//  Copyright (c) 2020 Parvin Sital. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SavedEventsDisplayLogic: class {
    func setup(interactor: SavedEventsInteraction)
    func setup(router: SavedEventsRoutingProtocol)
    func displaySomething(viewModel: SavedEvents.Something.ViewModel)
}

class SavedEventsViewController: UIViewController {
    var interactor: SavedEventsInteraction?
    var router: SavedEventsRoutingProtocol?
    
    private let wipLabel = UILabel(styling: .primary)
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupViews()
    }
}
private extension SavedEventsViewController {
    func setupViews() {
        self.view.backgroundColor = .systemBackground
        setupNavigation()
        setupWIPLabel()
    }
    
    func setupNavigation() {
        navigationItem.title = NSLocalizedString("savedEvents", comment: "")
    }
    
    func setupWIPLabel() {
        wipLabel.text = "WIP"
        view.addSubview(wipLabel)
        wipLabel.translatesAutoresizingMaskIntoConstraints = false
        
        let centerY = wipLabel.centerYAnchor.constraint(equalTo: view.centerYAnchor)
        let centerX = wipLabel.centerXAnchor.constraint(equalTo: view.centerXAnchor)
        NSLayoutConstraint.activate([centerY, centerX])
    }
}

extension SavedEventsViewController: SavedEventsDisplayLogic {
    func displaySomething(viewModel: SavedEvents.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
    
    func setup(interactor: SavedEventsInteraction) {
        self.interactor = interactor
    }
    
    func setup(router: SavedEventsRoutingProtocol) {
        self.router = router
    }
}

